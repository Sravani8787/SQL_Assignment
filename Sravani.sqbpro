<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/HP/Reddynandini.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="915"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Books" custom_title="0" dock_id="3" table="4,5:mainBooks"/><dock_state state="000000ff00000000fd0000000100000002000004f400000226fc0100000003fb000000160064006f0063006b00420072006f00770073006500310100000000000004f40000000000000000fb000000160064006f0063006b00420072006f00770073006500320100000000000004f40000000000000000fb000000160064006f0063006b00420072006f00770073006500330100000000000004f40000012d00ffffff000002580000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Books" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="50"/><column index="2" value="202"/><column index="3" value="132"/><column index="4" value="124"/><column index="5" value="46"/><column index="6" value="85"/><column index="7" value="95"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Borrow Transactions" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="87"/><column index="2" value="47"/><column index="3" value="50"/><column index="4" value="85"/><column index="5" value="85"/><column index="6" value="52"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Users" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="47"/><column index="2" value="187"/><column index="3" value="249"/><column index="4" value="29"/><column index="5" value="85"/><column index="6" value="85"/><column index="7" value="105"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">-- Creating the Users table
CREATE TABLE Users (
    UserID INTEGER PRIMARY KEY,    -- Unique identifier for each user
    Name TEXT NOT NULL,            -- User's name
    Email TEXT NOT NULL,           -- User's email
    Age INTEGER,                   -- User's age
    Gender TEXT,                   -- User's gender
    JoinDate DATE,                 -- The date the user joined
    MembershipLevel TEXT           -- Membership level of the user
);

-- Creating the Books table
CREATE TABLE Books (
    BookID INTEGER PRIMARY KEY,    -- Unique identifier for each book
    Title TEXT NOT NULL,           -- Title of the book
    Author TEXT NOT NULL,          -- Author of the book
    Genre TEXT,                    -- Genre of the book
    Price REAL,                    -- Price of the book
    PublishDate DATE,              -- Date the book was published
    CopiesAvailable INTEGER        -- Number of copies available
);

-- Creating the Transactions table
CREATE TABLE Transactions (
    TransactionID INTEGER PRIMARY KEY, -- Unique transaction ID
    UserID INTEGER,                    -- User involved in the transaction
    BookID INTEGER,                    -- Book involved in the transaction
    BorrowDate DATE,                   -- Date the book was borrowed
    ReturnDate DATE,                   -- Date the book was returned
    LateFee REAL,                      -- Late fee for the transaction
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (BookID) REFERENCES Books(BookID)
);
Select * from transactions</sql><current_tab id="0"/></tab_sql></sqlb_project>
